
# Imports
import numpy as np  # useful for many scientific computing in Python
import pandas as pd # primary data structure library
import matplotlib as mpl
import matplotlib.pyplot as plt
import seaborn as sns

# print(plt.style.available)
mpl.style.use('ggplot') # optional: for ggplot-like style

# check for latest version of Matplotlib
print('Matplotlib version: ', mpl.__version__) # >= 2.0.0

# Read in data
df = pd.read_csv('ramen-ratings.csv')
print ('Data read into a pandas dataframe!')

# Taking a look at the data
print(df.info())
print(df.shape)
print(df.head(25))

# Preprocessing
df.drop(['Review #', 'Brand', 'Variety', 'Style', 'Top Ten'], axis=1, inplace=True)
print('Dropped all columns but Country and Stars.')
# print(df['Stars'].unique())
df.drop(df[df.Stars == 'Unrated'].index, inplace=True)
df['Stars'] = pd.to_numeric(df['Stars'])
df.drop(df[df.Stars != 5].index, inplace=True)
df.reset_index(drop=True, inplace=True)

# print(df.info())
# print(df.shape)
# print(df.head())


df_countries = df.groupby('Country', axis=0).count()
df_countries=df_countries.rename(columns = {'Stars':'Count'})
df_countries.sort_values(['Count'], ascending=False, axis=0, inplace=True)
print(df_countries)

NUM_COLORS = df_countries.shape[0]
clrs = sns.color_palette('hls', n_colors=NUM_COLORS)

# Bad pie chart
df_countries['Count'].plot(kind='pie',
                figsize=(6.8, 6),
                # autopct='%1.1f%%',
                startangle=90,
                # shadow=True,
                labels=None,         # turn off labels on pie chart
                # pctdistance=1.12,    # the ratio between the center of each pie slice and the start of the text generated by autopct
                colors=clrs,  # add custom colors
                # explode=explode_list, # 'explode' lowest 3 continents
                counterclock=False,
                )
#
# # scale the title up by 12% to match pctdistance
plt.title('Top producers of 5-star ramen')
plt.axes().set_ylabel('')
# # plt.axis('equal')
plt.legend(labels=df_countries.index, ncol=2, loc='upper right',bbox_to_anchor=(1.45, 0.8))
plt.savefig('motivating-pie.png',bbox_inches="tight")
# plt.show()
plt.close()

# Correcting the mess

df_countries['Country2'] = df_countries.index
df_countries.loc[df_countries.Count < 20, 'Country2'] = 'Other countries'

print(df_countries)

# Another group by to get the Other group
df_countries = df_countries.groupby('Country2', axis=0, sort=False).sum()
# df_countries.sort_values(['Count'], ascending=False, axis=0, inplace=True)
# df_countries['Percentage'] = df_countries['Count'] / sum(df_countries['Count'])

# print(df_countries.info())
# print(df_countries.shape)
print(df_countries)

# Plot the bar chart
ax = df_countries['Count'].plot(kind='barh', color=np.array([0, 158, 115])/255)
ax.invert_yaxis()
plt.ylabel('Country')
plt.xlabel('Number of ramen varieties')
plt.title('Top producers of 5-star ramen')

# set individual bar lables using above list
for i in ax.patches:
    # get_width pulls left or right; get_y pushes up or down
    ax.text(i.get_width()+.3, i.get_y()+.31, \
            str(round((i.get_width()), 2)), fontsize=10, color='dimgrey')

plt.savefig('corrected-graph.png',bbox_inches="tight")
